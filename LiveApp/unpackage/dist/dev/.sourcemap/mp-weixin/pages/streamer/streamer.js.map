{"version":3,"file":"streamer.js","sources":["pages/streamer/streamer.vue","E:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc3RyZWFtZXIvc3RyZWFtZXIudnVl"],"sourcesContent":["<template>\n  <view class=\"live-push-container\">\n    <view class=\"header\">\n      <text class=\"title\">Stream Manage</text>\n      <button class=\"refresh-btn\" @click=\"refreshStreams\">\n        <uni-icons type=\"refresh\" size=\"16\" color=\"#fff\"></uni-icons>\n        Refresh List\n      </button>\n    </view>\n \n    <view class=\"content-wrapper\">\n      <view class=\"push-info-section card\">\n        <view class=\"section-header\">\n          <text class=\"section-title\">Streamer Message</text>\n        </view>\n        \n        <view class=\"instruction card\">\n          <view class=\"tip-icon\">\n            <uni-icons type=\"info\" size=\"20\" color=\"#409eff\"></uni-icons>\n          </view>\n          <text class=\"tip-text\">Use OBS or other streaming software to stream using the following information\n\t\t  </text>\n        </view>\n \n        <view class=\"stream-info\">\n          <view class=\"info-item\">\n            <text class=\"label\">Title</text>\n            <input class=\"input title-input\" v-model=\"title\" placeholder=\"Please enter the live broadcast title\" />\n            <button class=\"generate-btn primary-btn\" @click=\"generateStreamInfo\">\n              <uni-icons type=\"paperplane\" size=\"16\" color=\"#fff\"></uni-icons>\n              GenerateStreamInfo\n            </button>\n          </view>\n \n          <template v-if=\"webrtcUrl\">\n            <view class=\"info-group\">\n              <view class=\"info-item url-item\">\n                <text class=\"label\">WebRTC URL:</text>\n                <view class=\"input-group\">\n                  <input class=\"input url-input\" v-model=\"webrtcUrl\" readonly />\n                  <button class=\"copy-btn\" @click=\"copyText(webrtcUrl)\">\n                    <uni-icons type=\"copy\" size=\"16\" color=\"#666\"></uni-icons>\n                    <text class=\"copy-text\">Copy</text>\n                  </button>\n                </view>\n              </view>\n              \n              <view class=\"info-item url-item\">\n                <text class=\"label\">RTMP URL:</text>\n                <view class=\"input-group\">\n                  <input class=\"input url-input\" v-model=\"rtmpUrl\" readonly />\n                  <button class=\"copy-btn\" @click=\"copyText(rtmpUrl)\">\n                    <uni-icons type=\"copy\" size=\"16\" color=\"#666\"></uni-icons>\n                    <text class=\"copy-text\">Copy</text>\n                  </button>\n                </view>\n              </view>\n              \n              <view class=\"info-item url-item\">\n                <text class=\"label\">Stream Key:</text>\n                <view class=\"input-group\">\n                  <input class=\"input url-input\" v-model=\"streamKey\" readonly />\n                  <button class=\"copy-btn\" @click=\"copyText(streamKey)\">\n                    <uni-icons type=\"copy\" size=\"16\" color=\"#666\"></uni-icons>\n                    <text class=\"copy-text\">Copy</text>\n                  </button>\n                </view>\n              </view>\n            </view>\n            \n            <view class=\"info-item\">\n              <button class=\"stop-btn danger-btn\" @click=\"stopStream\">\n                <uni-icons type=\"closeempty\" size=\"16\" color=\"#fff\"></uni-icons>\n                Stop streaming\n              </button>\n            </view>\n          </template>\n        </view>\n      </view>\n      \n      <view class=\"active-streams-section card\">\n        <view class=\"section-header\">\n          <text class=\"section-title\">Current live stream</text>\n          <text class=\"stream-count\">{{ activeStreams.length }} live streams are available</text>\n        </view>\n        \n        <view class=\"streams-list\">\n          <view class=\"stream-item\" v-for=\"(stream, index) in activeStreams\" :key=\"index\">\n            <view class=\"stream-header\">\n              <view class=\"stream-status live-indicator\"></view>\n              <text class=\"stream-title\">{{ stream.title }}</text>\n            </view>\n            <view class=\"stream-details\">\n              <view class=\"detail-item\">\n                <uni-icons type=\"eye\" size=\"14\" color=\"#999\"></uni-icons>\n                <text class=\"detail-text\">Viewer count: {{ stream.viewers || 0 }} äºº</text>\n              </view>\n              <view class=\"detail-item\" v-if=\"stream.created_at\">\n                <uni-icons type=\"clock\" size=\"14\" color=\"#999\"></uni-icons>\n                <text class=\"detail-text\">Start time: {{ formatTime(stream.created_at) }}</text>\n              </view>\n            </view>\n          </view>\n          \n          <view class=\"no-streams\" v-if=\"activeStreams.length === 0\">\n            <uni-icons type=\"videocam\" size=\"40\" color=\"#c0c4cc\"></uni-icons>\n            <text class=\"no-streams-text\">Currently, there is no live broadcast scheduled for the start time</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n \n<script>\nexport default {\n  data() {\n    return {\n      title: '',\n      webrtcUrl: '',\n      rtmpUrl: '',\n      streamKey: '',\n      activeStreams: []\n    }\n  },\n  methods: {\n    async generateStreamInfo() {\n      if (!this.title) {\n        uni.showToast({\n          title: 'Please enter the live broadcast title',\n          icon: 'none',\n          duration: 2000\n        });\n        return;\n      }\n \n      uni.showLoading({\n        title: 'Generating...'\n      });\n \n      try {\n        const response = await uni.request({\n          url: 'http://localhost:9001/api/live/start',\n          method: 'POST',\n          header: {\n            'Content-Type': 'application/json',\n          },\n          data: { title: this.title }\n        });\n \n        uni.hideLoading();\n \n        const data = response.data;\n        if (data.code === 0) {\n          this.webrtcUrl = data.data.webrtc_url;\n          this.rtmpUrl = data.data.rtmp_url;\n          this.streamKey = data.data.stream_key;\n          \n          uni.showToast({\n            title: 'Live Streaming Information has been generated',\n            icon: 'success',\n            duration: 2000\n          });\n        } else {\n          throw new Error(data.message || 'Generation failed');\n        }\n      } catch (error) {\n        uni.hideLoading();\n        console.error('Failed to fetch streaming information:', error);\n        uni.showToast({\n          title: 'Failed to fetch streaming information: ' + (error.errMsg || error.message),\n          icon: 'none',\n          duration: 3000\n        });\n      }\n    },\n \n    async stopStream() {\n      if (!this.streamKey) {\n        uni.showToast({\n          title: 'No streaming being broadcast live',\n          icon: 'none',\n          duration: 2000\n        });\n        return;\n      }\n \n      uni.showLoading({\n        title: 'Stop streaming...'\n      });\n \n      try {\n        const response = await uni.request({\n          url: 'http://localhost:9001/api/live/stop',\n          method: 'POST',\n          header: {\n            'Content-Type': 'application/json',\n          },\n          data: { stream_key: this.streamKey }\n        });\n \n        uni.hideLoading();\n \n        const data = response.data;\n        if (data.code === 0) {\n          this.webrtcUrl = '';\n          this.rtmpUrl = '';\n          this.streamKey = '';\n          this.title = '';\n          uni.showToast({\n            title: 'Live stream has ended.',\n            icon: 'success',\n            duration: 2000\n          });\n        } else {\n          throw new Error(data.message || 'Failed to stop');\n        }\n      } catch (error) {\n        uni.hideLoading();\n        console.error('Failed to stop:', error);\n        uni.showToast({\n          title: 'Failed to stop: ' + (error.errMsg || error.message),\n          icon: 'none',\n          duration: 3000\n        });\n      }\n    },\n \n    async refreshStreams() {\n      try {\n        const response = await uni.request({\n          url: 'http://localhost:9001/api/live/active'\n        });\n        const data = response.data;\n        this.activeStreams = data.data || [];\n        \n        uni.showToast({\n          title: 'Refresh success',\n          icon: 'success',\n          duration: 1000\n        });\n      } catch (error) {\n        console.error('Failed to fetch streaming information:', error);\n        uni.showToast({\n          title: 'Refresh failed',\n          icon: 'none',\n          duration: 2000\n        });\n      }\n    },\n    \n    copyText(text) {\n      uni.setClipboardData({\n        data: text,\n        success: () => {\n          uni.showToast({\n            title: 'Copied to clipboard',\n            icon: 'success',\n            duration: 1500\n          });\n        }\n      });\n    },\n    \n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    }\n  },\n  onLoad() {\n    this.refreshStreams();\n  },\n  onUnload() {\n  }\n}\n</script>\n\n<style scoped>\n.live-push-container {\n  padding: 20rpx;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  min-height: 100vh;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30rpx;\n  padding: 30rpx;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 20rpx;\n  box-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10rpx);\n}\n\n.title {\n  font-size: 38rpx;\n  font-weight: bold;\n  color: #303133;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.refresh-btn {\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n  padding: 16rpx 24rpx;\n  background: linear-gradient(135deg, #409eff 0%, #64b5f6 100%);\n  color: white;\n  border: none;\n  border-radius: 50rpx;\n  font-size: 26rpx;\n  box-shadow: 0 4rpx 16rpx rgba(64, 158, 255, 0.3);\n  transition: all 0.3s ease;\n}\n\n.refresh-btn:active {\n  transform: scale(0.95);\n  box-shadow: 0 2rpx 8rpx rgba(64, 158, 255, 0.5);\n}\n\n.content-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30rpx;\n}\n\n.card {\n  background: rgba(255, 255, 255, 0.92);\n  border-radius: 20rpx;\n  padding: 30rpx;\n  box-shadow: 0 8rpx 32rpx rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(10rpx);\n  border: 1rpx solid rgba(255, 255, 255, 0.2);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30rpx;\n  padding-bottom: 20rpx;\n  border-bottom: 2rpx solid #f0f2f5;\n}\n\n.section-title {\n  font-size: 34rpx;\n  font-weight: bold;\n  color: #303133;\n}\n\n.stream-count {\n  font-size: 24rpx;\n  color: #909399;\n  background-color: #ecf5ff;\n  padding: 6rpx 16rpx;\n  border-radius: 20rpx;\n}\n\n.instruction {\n  display: flex;\n  align-items: flex-start;\n  gap: 16rpx;\n  margin-bottom: 30rpx;\n  padding: 24rpx;\n  background: linear-gradient(135deg, #e8f4ff 0%, #f0f8ff 100%);\n  border-radius: 16rpx;\n  border: 1rpx solid #d0e6ff;\n}\n\n.tip-icon {\n  margin-top: 4rpx;\n}\n\n.tip-text {\n  flex: 1;\n  font-size: 26rpx;\n  color: #409eff;\n  line-height: 1.5;\n}\n\n.info-item {\n  margin-bottom: 30rpx;\n}\n\n.label {\n  display: block;\n  margin-bottom: 16rpx;\n  font-weight: 500;\n  font-size: 28rpx;\n  color: #606266;\n}\n\n.input {\n  width: 100%;\n  padding: 24rpx;\n  margin-bottom: 10rpx;\n  border: 3rpx solid #dcdfe6;\n  border-radius: 12rpx;\n  font-size: 30rpx;\n  box-sizing: border-box;\n  background-color: #fff;\n  transition: all 0.3s ease;\n  min-height: 80rpx;\n}\n\n.title-input {\n  font-size: 32rpx;\n  padding: 24rpx;\n  border-width: 3rpx;\n  min-height: 90rpx;\n  font-weight: 500;\n}\n\n.url-input {\n  font-size: 28rpx;\n  padding: 20rpx;\n  min-height: 70rpx;\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n}\n\n.input:focus {\n  border-color: #409eff;\n  outline: none;\n  box-shadow: 0 0 0 4rpx rgba(64, 158, 255, 0.2);\n}\n\n.input-group {\n  display: flex;\n  gap: 16rpx;\n}\n\n.copy-btn {\n  width: 120rpx;\n  background-color: #f5f7fa;\n  border: 2rpx solid #dcdfe6;\n  border-radius: 12rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  flex-direction: column;\n  padding: 10rpx 0;\n}\n\n.copy-btn:active {\n  background-color: #e1e6f0;\n  transform: scale(0.95);\n}\n\n.copy-text {\n  font-size: 24rpx;\n  color: #606266;\n  margin-top: 4rpx;\n}\n\n.primary-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12rpx;\n  width: 100%;\n  padding: 24rpx;\n  background: linear-gradient(135deg, #409eff 0%, #64b5f6 100%);\n  color: white;\n  border: none;\n  border-radius: 12rpx;\n  font-size: 28rpx;\n  font-weight: 500;\n  box-shadow: 0 4rpx 16rpx rgba(64, 158, 255, 0.3);\n  transition: all 0.3s ease;\n}\n\n.primary-btn:active {\n  transform: scale(0.98);\n  box-shadow: 0 2rpx 8rpx rgba(64, 158, 255, 0.5);\n}\n\n.danger-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12rpx;\n  width: 100%;\n  padding: 24rpx;\n  background: linear-gradient(135deg, #f56c6c 0%, #ff8e8e 100%);\n  color: white;\n  border: none;\n  border-radius: 12rpx;\n  font-size: 28rpx;\n  font-weight: 500;\n  box-shadow: 0 4rpx 16rpx rgba(245, 108, 108, 0.3);\n  transition: all 0.3s ease;\n}\n\n.danger-btn:active {\n  transform: scale(0.98);\n  box-shadow: 0 2rpx 8rpx rgba(245, 108, 108, 0.5);\n}\n\n.info-group {\n  background: linear-gradient(135deg, #f5f7fa 0%, #fafcff 100%);\n  border-radius: 16rpx;\n  padding: 24rpx;\n  margin: 20rpx 0 30rpx;\n  border: 1rpx solid #ebeef5;\n}\n\n.url-item {\n  margin-bottom: 24rpx;\n}\n\n.url-item:last-child {\n  margin-bottom: 0;\n}\n\n.active-streams-section {\n  margin-top: 20rpx;\n}\n\n.streams-list {\n  display: flex;\n  flex-direction: column;\n  gap: 24rpx;\n}\n\n.stream-item {\n  padding: 24rpx;\n  border-radius: 16rpx;\n  background: linear-gradient(135deg, #ffffff 0%, #fafafa 100%);\n  box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.05);\n  border: 1rpx solid #f0f0f0;\n  transition: all 0.3s ease;\n}\n\n.stream-item:hover {\n  box-shadow: 0 8rpx 24rpx rgba(0, 0, 0, 0.1);\n  transform: translateY(-4rpx);\n}\n\n.stream-header {\n  display: flex;\n  align-items: center;\n  gap: 16rpx;\n  margin-bottom: 16rpx;\n}\n\n.live-indicator {\n  width: 16rpx;\n  height: 16rpx;\n  border-radius: 50%;\n  background-color: #f56c6c;\n  animation: pulse 1.5s infinite;\n  box-shadow: 0 0 0 0 rgba(245, 108, 108, 0.7);\n}\n\n@keyframes pulse {\n  0% {\n    box-shadow: 0 0 0 0 rgba(245, 108, 108, 0.7);\n  }\n  70% {\n    box-shadow: 0 0 0 10rpx rgba(245, 108, 108, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(245, 108, 108, 0);\n  }\n}\n\n.stream-title {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #303133;\n  flex: 1;\n}\n\n.stream-details {\n  display: flex;\n  flex-direction: column;\n  gap: 12rpx;\n  padding-left: 32rpx;\n}\n\n.detail-item {\n  display: flex;\n  align-items: center;\n  gap: 12rpx;\n}\n\n.detail-text {\n  font-size: 24rpx;\n  color: #909399;\n}\n\n.no-streams {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 60rpx 0;\n  gap: 20rpx;\n}\n\n.no-streams-text {\n  font-size: 28rpx;\n  color: #c0c4cc;\n}\n</style>","import MiniProgramPage from 'D:/javaproject/Live-streaming-platform/LiveApp/pages/streamer/streamer.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}